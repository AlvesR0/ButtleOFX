Import( 'project', 'libs' )
import os.path

name = project.getName()

incdirs = ['src/common', 'src/application']
src_common = project.scanFiles( ['src/common'], accept=['*.cpp','*.c'] )
src_application = project.scanFiles( ['src/application'], accept=['*.cpp','*.c'] )
src_ui = project.scanFiles( ['src/application'], accept=['*.ui'] )
src_swig = project.scanFiles( ['src/common'], accept=['*.i'] )

#print 'src_ui:', src_ui

libraries = [
	libs.boost,
	libs.m,
	libs.pthread,
	libs.python,
	]
librariesGui = [
	libs.qt4(modules=['QtCore', 'QtGui', 'QtOpenGL'], uiFiles=src_ui)
	]

project.StaticLibrary(
	'qSamCommon',
	sources = src_common,
	libraries = libraries,
	shared = True,
	)

pythonOutputDir = os.path.join( project.inOutputDir(), 'python' )

swigGlobalFlags={
	'CPPPATH': incdirs,
	'SWIGFLAGS': ['-python','-c++','-Wall'],
	'SWIGPATH': incdirs,
	'SWIGOUTDIR': pythonOutputDir,
	}
swigReplaceFlags = {
	'SHLIBPREFIX': '',
	'LIBPREFIX': '',
	}

swigWrap = project.SharedLibrary(
	target = '_'+name,
	sources = src_swig,
	globalEnvFlags = swigGlobalFlags,
	replaceLocalEnvFlags = swigReplaceFlags,
	libraries = [libs.qSamCommon],
	installDir = pythonOutputDir,
	)

appli = project.Program(
	target = name,
	sources = src_application,
	libraries = [libs.qSamCommon]+librariesGui,
	globalEnvFlags = {'CPPPATH':incdirs},
	installDir = project.inOutputBin(),
	)

Depends( appli, swigWrap )

#Alias( 'all', swigWrap )
#Alias( 'all', appli )
#Alias( name, swigWrap )
Alias( name, appli )


